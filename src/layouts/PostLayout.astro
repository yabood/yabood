---
import { type CollectionEntry } from 'astro:content';
import BaseLayout from './BaseLayout.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import Prose from '../components/Prose.astro';
import TableOfContents from '../components/TableOfContents.astro';
import RelatedArticles from '../components/RelatedArticles.astro';
import { Image } from 'astro:assets';

type Props = CollectionEntry<'blog'>['data'] & {
  readingTime?: string;
  headings?: {
    depth: number;
    slug: string;
    text: string;
  }[];
  currentPost?: CollectionEntry<'blog'>;
  draft?: boolean;
};

const {
  title,
  description,
  pubDate,
  updatedDate,
  heroImage,
  tags,
  author,
  showToc,
  headings = [],
  currentPost,
  readingTime,
  draft,
} = Astro.props;

const articleDate = pubDate.toLocaleDateString('en-US', {
  year: 'numeric',
  month: 'long',
  day: 'numeric',
});

const updatedDateFormatted = updatedDate?.toLocaleDateString('en-US', {
  year: 'numeric',
  month: 'long',
  day: 'numeric',
});
---

<BaseLayout
  title={title}
  description={description}
  type="article"
  publishedDate={pubDate}
  modifiedDate={updatedDate}
  author={author}
  tags={tags}
  image={typeof heroImage === 'object' ? heroImage.src : heroImage}
  breadcrumbs={[
    { name: 'Blog', url: '/blog' },
    { name: title, url: `/blog/${currentPost?.slug || ''}` },
  ]}
  headings={headings}>
  <Header />

  <main id="main" class="py-12">
    <article>
      <header class="container mx-auto max-w-3xl px-4 mb-8">
        <div class="text-sm text-gray-600">
          <time datetime={pubDate.toISOString()}>
            {articleDate}
          </time>
          {
            readingTime && (
              <>
                <span class="mx-2">·</span>
                <span>{readingTime}</span>
              </>
            )
          }
          {
            draft && import.meta.env.DEV && (
              <>
                <span class="mx-2">·</span>
                <span class="text-yellow-600 font-medium">Draft</span>
              </>
            )
          }
          {updatedDate && updatedDateFormatted && <span> • Updated {updatedDateFormatted}</span>}
        </div>

        <h1 class="mt-2 text-4xl font-bold tracking-tight text-gray-900 sm:text-5xl">
          {title}
        </h1>

        <p class="mt-4 text-lg text-gray-600">
          {description}
        </p>

        {
          author && (
            <div class="mt-4 text-sm text-gray-600">
              By <span class="font-medium">{author}</span>
            </div>
          )
        }

        {
          tags && tags.length > 0 && (
            <div class="mt-4 flex flex-wrap gap-2">
              {tags.map((tag) => (
                <a
                  href={`/tags/${tag}`}
                  class="rounded-full bg-gray-100 px-3 py-1 text-xs font-medium text-gray-700 hover:bg-gray-200">
                  #{tag}
                </a>
              ))}
            </div>
          )
        }
      </header>

      {
        heroImage && (
          <div class="container mx-auto max-w-3xl px-4 mb-8 overflow-hidden rounded-lg">
            <Image
              src={heroImage}
              alt={`Hero image for ${title}`}
              width={1200}
              height={630}
              loading="eager"
              class="h-auto w-full object-cover cursor-zoom-in hero-image"
            />
          </div>
        )
      }

      <div class="container mx-auto max-w-3xl px-4">
        <div class="mx-auto relative">
          {showToc && <TableOfContents headings={headings} />}
          <Prose>
            <slot />
          </Prose>
        </div>
      </div>
    </article>

    <!-- Author Bio Section -->
    {
      author && (
        <section class="container mx-auto max-w-3xl px-4 mt-12 pt-8 border-t border-gray-200">
          <div class="flex items-start gap-4">
            <div class="flex-shrink-0">
              <div class="w-16 h-16 rounded-full bg-gradient-to-br from-blue-500 to-purple-600 flex items-center justify-center text-white font-bold text-xl">
                {author.charAt(0).toUpperCase()}
              </div>
            </div>
            <div>
              <h3 class="text-lg font-semibold text-gray-900">Written by {author}</h3>
              <p class="mt-1 text-gray-600">
                Software engineer passionate about technology, development, and creativity. I build
                modern web applications and explore the intersection of technology and user
                experience.
              </p>
              <div class="mt-3 flex gap-4">
                <a href="/about" class="text-sm text-blue-600 hover:text-blue-800 font-medium">
                  Learn more about me →
                </a>
                <a
                  href="https://twitter.com/yabood"
                  target="_blank"
                  rel="noopener noreferrer"
                  class="text-sm text-gray-500 hover:text-gray-700">
                  Follow on Twitter
                </a>
              </div>
            </div>
          </div>
        </section>
      )
    }

    {currentPost && <RelatedArticles currentPost={currentPost} />}
  </main>

  <Footer />
</BaseLayout>
