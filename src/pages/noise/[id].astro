---
import { type CollectionEntry, getCollection } from 'astro:content';
import BaseLayout from '../../layouts/BaseLayout.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import Seo from '../../components/Seo.astro';

export const prerender = true;

export async function getStaticPaths() {
  const noiseList = (await getCollection('noise')).filter(
    (noise) => import.meta.env.DEV || !noise.data.draft
  );
  return noiseList.map((noise) => ({
    params: { id: noise.data.id },
    props: noise,
  }));
}

type Props = CollectionEntry<'noise'>;

const noise = Astro.props;
const { Content } = await noise.render();

// Helper to extract first 80 chars of text for title fallback
function extractFirstChars(content: string, length: number = 80): string {
  const text = content
    .replace(/<[^>]*>/g, '')
    .replace(/!\[.*?\]\(.*?\)/g, '')
    .replace(/\[([^\]]+)\]\(.*?\)/g, '$1')
    .replace(/#{1,6}\s/g, '')
    .replace(/[*_~`]/g, '')
    .replace(/\n+/g, ' ')
    .trim();

  return text.length > length ? text.substring(0, length).trim() + '...' : text;
}

// Helper to extract first image for OG
function extractFirstImage(content: string): string | null {
  const imgRegex = /!\[.*?\]\((.*?)\)/;
  const match = content.match(imgRegex);
  return match ? match[1] : null;
}

// Generate title for SEO
const pageTitle = noise.data.summary
  ? `Noise · ${noise.data.summary}`
  : `Noise · ${extractFirstChars(noise.body) || noise.data.publishedAt.toLocaleDateString('en-US', { year: 'numeric', month: 'short', day: 'numeric' })}`;

// Generate description for SEO
const pageDescription = noise.data.summary || extractFirstChars(noise.body, 160);

// Extract OG image
const ogImage = extractFirstImage(noise.body) || '/og-image.jpg';
---

<BaseLayout title={pageTitle} description={pageDescription}>
  <Seo
    title={pageTitle}
    description={pageDescription}
    image={ogImage}
    type="article"
    publishedDate={noise.data.publishedAt}
  />

  <Header />

  <main id="main" class="container mx-auto max-w-3xl px-4 py-12">
    <article class="noise-detail">
      <header class="mb-8">
        <time
          datetime={noise.data.publishedAt.toISOString()}
          class="text-sm text-gray-500 dark:text-gray-400">
          {
            noise.data.publishedAt.toLocaleTimeString('en-US', {
              hour: 'numeric',
              minute: '2-digit',
            })
          }
          <span class="mx-1">·</span>
          {
            noise.data.publishedAt.toLocaleDateString('en-US', {
              year: 'numeric',
              month: 'long',
              day: 'numeric',
            })
          }
        </time>
      </header>

      <div class="prose prose-lg dark:prose-invert max-w-none noise-content">
        <Content />
      </div>

      <footer class="mt-12 pt-8 border-t border-gray-200 dark:border-gray-800">
        <div class="flex flex-wrap gap-3">
          <a
            href={`https://twitter.com/intent/tweet?text=${encodeURIComponent(pageDescription)}&url=${encodeURIComponent(Astro.url.href)}`}
            target="_blank"
            rel="noopener noreferrer"
            class="inline-flex items-center gap-2 px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50 dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 dark:hover:bg-gray-700 transition-colors">
            <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 24 24" aria-hidden="true">
              <path
                d="M18.244 2.25h3.308l-7.227 8.26 8.502 11.24H16.17l-5.214-6.817L4.99 21.75H1.68l7.73-8.835L1.254 2.25H8.08l4.713 6.231zm-1.161 17.52h1.833L7.084 4.126H5.117z"
              ></path>
            </svg>
            Share on X
          </a>

          <a
            href={`https://www.linkedin.com/sharing/share-offsite/?url=${encodeURIComponent(Astro.url.href)}`}
            target="_blank"
            rel="noopener noreferrer"
            class="inline-flex items-center gap-2 px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50 dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 dark:hover:bg-gray-700 transition-colors">
            <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 24 24" aria-hidden="true">
              <path
                d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z"
              ></path>
            </svg>
            Share on LinkedIn
          </a>

          <button
            id="copy-link"
            class="inline-flex items-center gap-2 px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50 dark:bg-gray-800 dark:text-gray-300 dark:border-gray-600 dark:hover:bg-gray-700 transition-colors">
            <svg
              class="w-4 h-4"
              fill="none"
              stroke="currentColor"
              viewBox="0 0 24 24"
              xmlns="http://www.w3.org/2000/svg">
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M13.828 10.172a4 4 0 00-5.656 0l-4 4a4 4 0 105.656 5.656l1.102-1.101m-.758-4.899a4 4 0 005.656 0l4-4a4 4 0 00-5.656-5.656l-1.1 1.1"
              ></path>
            </svg>
            <span id="copy-text">Copy Link</span>
          </button>
        </div>

        <div class="mt-8">
          <a
            href="/noise"
            class="text-sm font-medium text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300 transition-colors">
            ← Back to Noise
          </a>
        </div>
      </footer>
    </article>
  </main>

  <Footer />

  <script>
    const copyButton = document.getElementById('copy-link');
    const copyText = document.getElementById('copy-text');

    copyButton?.addEventListener('click', async () => {
      try {
        await navigator.clipboard.writeText(window.location.href);
        if (copyText) {
          copyText.textContent = 'Copied!';
          setTimeout(() => {
            copyText.textContent = 'Copy Link';
          }, 2000);
        }
      } catch (err) {
        console.error('Failed to copy: ', err);
      }
    });
  </script>

  <style>
    .noise-content :global(img) {
      border-radius: 0.5rem;
    }

    .noise-content :global(video) {
      border-radius: 0.5rem;
      width: 100%;
    }

    .noise-content :global(audio) {
      width: 100%;
    }
  </style>
</BaseLayout>
