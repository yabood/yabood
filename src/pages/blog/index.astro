---
import { getCollection } from 'astro:content';
import BaseLayout from '../../layouts/BaseLayout.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';

const posts = (await getCollection('blog'))
  .filter(post => !post.data.draft)
  .sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());
---

<BaseLayout
  title="Blog"
  description="Articles about web development, technology, and more"
>
  <Header />
  
  <main id="main" class="container mx-auto max-w-4xl px-4 py-12">
    <div class="mb-12 text-center">
      <h1 class="mb-4 text-4xl font-bold tracking-tight text-gray-900 dark:text-white sm:text-5xl">
        Blog
      </h1>
      <p class="mx-auto max-w-2xl text-lg text-gray-600 dark:text-gray-400">
        Thoughts, tutorials, and insights about web development and technology.
      </p>
    </div>
    
    <div class="space-y-12">
      {posts.map((post) => (
        <article class="group">
          <div>
            <a href={`/blog/${post.slug}`} class="block">
              <time datetime={post.data.pubDate.toISOString()} class="text-sm text-gray-600 dark:text-gray-400">
                {post.data.pubDate.toLocaleDateString('en-US', {
                  year: 'numeric',
                  month: 'long',
                  day: 'numeric',
                })}
              </time>
              <h2 class="mt-2 text-2xl font-bold text-gray-900 group-hover:text-accent dark:text-white dark:group-hover:text-accent-light">
                {post.data.title}
              </h2>
              <p class="mt-2 text-gray-600 dark:text-gray-400">
                {post.data.description}
              </p>
            </a>
            
            {post.data.tags && post.data.tags.length > 0 && (
              <div class="mt-4 flex flex-wrap gap-2">
                {post.data.tags.map((tag) => (
                  <a 
                    href={`/tags/${tag}`}
                    class="rounded-full bg-gray-100 px-3 py-1 text-xs font-medium text-gray-700 hover:bg-gray-200 dark:bg-gray-800 dark:text-gray-300 dark:hover:bg-gray-700 transition-colors"
                    onclick={(e) => e.stopPropagation()}
                  >
                    #{tag}
                  </a>
                ))}
              </div>
            )}
            
            <a 
              href={`/blog/${post.slug}`}
              class="mt-4 inline-flex items-center text-sm font-medium text-accent hover:text-accent-dark dark:text-accent-light dark:hover:text-accent transition-colors"
            >
              Read article
              <svg class="ml-1 h-4 w-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
              </svg>
            </a>
          </div>
        </article>
      ))}
    </div>
    
    {posts.length === 0 && (
      <div class="text-center">
        <p class="text-gray-600 dark:text-gray-400">No posts yet. Check back soon!</p>
      </div>
    )}
  </main>
  
  <Footer />
</BaseLayout>